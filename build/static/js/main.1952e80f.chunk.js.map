{"version":3,"sources":["Context/constance.js","Redux/authSlice.js","Redux/usersSlice.js","Redux/apiRequest.js","createInstance.js","Components/Home/HomePage.jsx","Components/Login/Login.jsx","Components/Register/Register.jsx","Components/NavBar/NavBar.jsx","App.js","Redux/store.js","index.js"],"names":["apiUrl","authSlice","createSlice","name","initialState","login","currentUser","undefined","isFeching","error","register","success","reducers","loginStart","state","loginSuccess","action","payload","loginFailed","logoutStart","logoutSuccess","logoutFailed","registerStart","registerSuccess","registerFailed","actions","usersSlice","users","allUser","messages","getAllUserStart","getAllUserSuccess","getAllUserFailed","deleteUserStart","deleteUserSuccess","deleteUserFailed","loginUser","user","dispatch","navigate","a","axios","post","withCredentials","credentials","res","data","registerUser","getAllUser","accessToken","id","get","headers","token","deleteUser","axiosJwt","delete","response","logoutUser","defaults","refreshToken","console","log","createAxios","stateSuccess","newInstance","create","interceptors","request","use","config","date","Date","jwt_decode","exp","getTime","refreshUser","err","Promise","reject","HomePage","useSelector","auth","userList","errorMessage","userId","_id","useDispatch","useNavigate","useEffect","className","map","username","onClick","Login","useState","setUsername","password","setPassword","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","to","Register","email","setEmail","NavBar","App","path","element","persistConfig","key","version","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1952e80f.chunk.js","sourcesContent":["\r\nconst apiUrl = process.env.NODE_ENV !== 'production' ? 'http://localhost:8000' : 'https://only-login.herokuapp.com'\r\n\r\n//https://only-login.herokuapp.com\r\n//http://localhost:8000\r\nexport default apiUrl\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        login: {\r\n            currentUser: undefined,\r\n            isFeching: true,\r\n            error: false,\r\n        },\r\n        register:{\r\n            isFeching: false,\r\n            error: false,\r\n            success: false,\r\n        }\r\n    },\r\n    reducers: {\r\n        // Login\r\n        loginStart: (state) => {\r\n            state.login.isFeching = true\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.login.isFeching = false\r\n            state.login.error = false\r\n            state.login.currentUser = action.payload\r\n        },\r\n        loginFailed: (state) => {\r\n            state.login.isFeching = false\r\n            state.login.error = true\r\n        },\r\n\r\n        //Logout\r\n        logoutStart: (state) => {\r\n            state.login.isFeching = true\r\n        },\r\n        logoutSuccess: (state) => {\r\n            state.login.isFeching = false\r\n            state.login.error = false\r\n            state.login.currentUser = null\r\n        },\r\n        logoutFailed: (state) => {\r\n            state.login.isFeching = false\r\n            state.login.error = true\r\n        },\r\n\r\n        // Register\r\n        registerStart: (state) => {\r\n            state.register.isFeching = true\r\n        },\r\n        registerSuccess: (state) => {\r\n            state.register.isFeching = false\r\n            state.register.error = false\r\n            state.register.success = true\r\n        },\r\n        registerFailed: (state) => {\r\n            state.register.isFeching = false\r\n            state.register.error = true\r\n            state.register.success = false\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    loginStart,\r\n    loginSuccess,\r\n    loginFailed,\r\n    registerStart,\r\n    registerSuccess,\r\n    registerFailed,\r\n    logoutStart,\r\n    logoutSuccess,\r\n    logoutFailed,\r\n} = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst usersSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        users: {\r\n            allUser: null,\r\n            isFeching: false,\r\n            error: false\r\n        },\r\n        messages: ''\r\n    },\r\n    reducers: {\r\n        // Get User\r\n        getAllUserStart: (state) => {\r\n            state.users.isFeching = true\r\n        },\r\n        getAllUserSuccess: (state, action) => {\r\n            state.users.isFeching = false\r\n            state.users.error = false\r\n            state.users.allUser = action.payload\r\n        },\r\n        getAllUserFailed: (state) => {\r\n            state.users.isFeching = false\r\n            state.users.error = true\r\n        },\r\n\r\n        // Delete user \r\n        deleteUserStart: (state) => {\r\n            state.users.isFeching = true\r\n        }, \r\n        deleteUserSuccess: (state, action) => {\r\n            state.users.isFeching = false\r\n            state.users.error = false\r\n            state.messages = action.payload\r\n        },\r\n        deleteUserFailed: (state, action) => {\r\n            state.users.isFeching = false\r\n            state.users.error = true\r\n            state.messages = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    getAllUserStart,\r\n    getAllUserSuccess,\r\n    getAllUserFailed,\r\n    deleteUserStart,\r\n    deleteUserSuccess,\r\n    deleteUserFailed\r\n} = usersSlice.actions\r\nexport default usersSlice.reducer\r\n","import axios from 'axios'\r\nimport apiUrl from '../Context/constance'\r\nimport {\r\n    loginStart,\r\n    loginSuccess,\r\n    loginFailed,\r\n    registerStart,\r\n    registerSuccess,\r\n    registerFailed,\r\n    logoutStart,\r\n    logoutSuccess,\r\n    logoutFailed\r\n} from '../Redux/authSlice'\r\n\r\nimport {\r\n    getAllUserStart,\r\n    getAllUserSuccess,\r\n    getAllUserFailed,\r\n    deleteUserStart,\r\n    deleteUserSuccess,\r\n    deleteUserFailed\r\n} from '../Redux/usersSlice'\r\n\r\nconst loginUser = async (user, dispatch, navigate) => {\r\n    dispatch(loginStart())\r\n    try {\r\n        const res = await axios.post(`${apiUrl}/v1/auth/login`, user, {\r\n            withCredentials: true,\r\n            credentials: 'include'\r\n        })\r\n        dispatch(loginSuccess(res.data))\r\n        navigate(\"/home\")\r\n    } catch (error) {\r\n        dispatch(loginFailed())\r\n    }\r\n}\r\n\r\nconst registerUser = async (user, dispatch, navigate) => {\r\n    dispatch(registerStart())\r\n    try {\r\n        await axios.post(`${apiUrl}/v1/auth/register`, user)\r\n        dispatch(registerSuccess())\r\n        navigate(\"/login\")\r\n    } catch (error) {\r\n        dispatch(registerFailed())\r\n    }\r\n}\r\n\r\nconst getAllUser = async (dispatch, accessToken, id) => {\r\n    dispatch(getAllUserStart())\r\n    try {\r\n        const res = await axios.get(`${apiUrl}/v1/user/${id}`, {\r\n            headers: { token: `Bearer ${accessToken}` }\r\n        })\r\n        dispatch(getAllUserSuccess(res.data))\r\n    } catch (error) {\r\n        dispatch(getAllUserFailed())\r\n    }\r\n}\r\n\r\nconst deleteUser = async (dispatch, accessToken, id, axiosJwt) => {\r\n    dispatch(deleteUserStart())\r\n    try {\r\n        const res = await axiosJwt.delete(`${apiUrl}/v1/user/${id}`, {\r\n            headers: {\r\n                token: `Bearer ${accessToken}`\r\n            }\r\n        })\r\n        dispatch(deleteUserSuccess(res.data))\r\n    } catch (err) {\r\n        dispatch(deleteUserFailed(err.response.data))\r\n    }\r\n}\r\n\r\nconst logoutUser = async (dispatch, id, navigate, accessToken, axiosJwt) => {\r\n    dispatch(logoutStart())\r\n    try {\r\n        await axiosJwt.post(`${apiUrl}/v1/auth/logout`, id, {\r\n            headers: { token: `Bearer ${accessToken}` }\r\n        })\r\n        dispatch(logoutSuccess())\r\n        navigate(\"/login\")\r\n    } catch (error) {\r\n        dispatch(logoutFailed(error))\r\n    }\r\n}\r\n\r\nexport { loginUser, registerUser, getAllUser, deleteUser, logoutUser }\r\n","import axios from \"axios\"\r\nimport jwt_decode from \"jwt-decode\";\r\nimport apiUrl from \"./Context/constance\"\r\naxios.defaults.withCredentials = true\r\n\r\nconst refreshToken = async () => {\r\n    try {\r\n        const res = await axios.post(apiUrl + \"/v1/auth/refresh\", {\r\n            withCredentials: true\r\n        })\r\n        return res.data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst createAxios = (user, dispatch, stateSuccess) => {\r\n    const newInstance = axios.create()\r\n    newInstance.interceptors.request.use(\r\n        async (config) => {\r\n            let date = new Date()\r\n            const decodedToken = jwt_decode(user?.accessToken)\r\n            if (decodedToken.exp < date.getTime() / 1000) {\r\n                const data = await refreshToken()\r\n                const refreshUser = {\r\n                    ...user,\r\n                    accessToken: data.accessToken\r\n                }\r\n                dispatch(stateSuccess(refreshUser))\r\n                config.headers['token'] = `Bearer ${data.accessToken}`\r\n            }\r\n            return config\r\n        },\r\n        (err) => Promise.reject(err))\r\n    return newInstance\r\n}\r\n\r\nexport default createAxios\r\n","import \"./home.css\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { getAllUser, deleteUser } from '../../Redux/apiRequest'\nimport createAxios from \"../../createInstance\";\nimport { loginSuccess } from '../../Redux/authSlice'\n\nconst HomePage = () => {\n  const user = useSelector(state => state.auth.login.currentUser)\n  const userList = useSelector(state => state.users.users.allUser)\n  const errorMessage = useSelector(state => state.users?.messages)\n  const accessToken = user?.accessToken\n  const userId = user?._id\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const axiosJwt = createAxios(user, dispatch, loginSuccess)\n\n  const handleDelete = (id) => {\n    deleteUser(dispatch, accessToken, id, axiosJwt)\n  }\n\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/login\")\n    }\n    if (user?.accessToken) {\n      getAllUser(dispatch, accessToken, userId, axiosJwt)\n    }\n  }, [])\n\n\n  return (\n    <main className=\"home-container\">\n      <div className=\"home-title\">User List</div>\n      <div className=\"home-userlist\">\n        {userList?.map((user) => {\n          return (\n            <div className=\"user-container\" key={user._id}>\n              <div className=\"home-user\">{user.username} {userId === user._id ? '(Bạn)' : ''}</div>\n              <div className=\"delete-user\" onClick={() => handleDelete(user._id)}> Delete </div>\n            </div>\n          );\n        })}\n      </div>\n      {errorMessage}\n    </main>\n  );\n};\n\nexport default HomePage;\n","import \"./login.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { loginUser } from '../../Redux/apiRequest'\n\nconst Login = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        const user = {\n            username,\n            password,\n        }\n        loginUser(user, dispatch, navigate)\n    }\n\n\n    return (\n        <section className=\"login-container\">\n            <div className=\"login-title\"> Log in</div>\n            <form onSubmit={handleLogin}>\n                <label>USERNAME</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter your username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <label>PASSWORD</label>\n                <input\n                    type=\"password\"\n                    placeholder=\"Enter your password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\"> Continue </button>\n            </form>\n            <div className=\"login-register\"> Don't have an account yet? </div>\n            <Link className=\"login-register-link\" to=\"/register\">Register one for free </Link>\n        </section>\n    );\n}\n\nexport default Login;","import { useState } from 'react'\nimport \"./register.css\";\nimport { registerUser } from '../../Redux/apiRequest'\nimport { useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nconst Register = () => {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n        const newUser = {\n            username,\n            email,\n            password,\n        }\n        registerUser(newUser, dispatch, navigate)\n    }\n\n    return (\n        <section className=\"register-container\">\n            <div className=\"register-title\"> Sign up </div>\n            <form onSubmit={handleRegister}>\n                <label>EMAIL</label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter your email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <label>USERNAME</label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter your username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <label>PASSWORD</label>\n                <input \n                    type=\"password\" \n                    placeholder=\"Enter your password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\"> Create account </button>\n            </form>\n        </section>\n\n    );\n}\n\nexport default Register;","import { Link, useNavigate } from \"react-router-dom\";\nimport \"./navbar.css\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logoutUser } from '../../Redux/apiRequest'\nimport createAxios from '../../createInstance'\nimport { logoutSuccess } from '../../Redux/authSlice'\nimport { deleteUserSuccess } from '../../Redux/usersSlice'\n\nconst NavBar = () => {\n  const user = useSelector(state =>  state.auth.login?.currentUser)\n  const userId = user?._id\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const axiosJwt = createAxios(user, dispatch, logoutSuccess)\n\n  const hanldeLogout = () => {\n    logoutUser(dispatch, userId, navigate, user?.accessToken, axiosJwt)\n    dispatch(deleteUserSuccess(''))\n  }\n\n  return (\n    <nav className=\"navbar-container\">\n      {user? (\n        <>\n        <Link to=\"/home\" className=\"navbar-home\"> Home </Link>\n        <p className=\"navbar-user\">Hi, <span> {user.username}  </span> </p>\n        <Link to=\"/logout\" className=\"navbar-logout\" onClick={hanldeLogout}> Log out</Link>\n        </>\n      ) : (    \n        <>\n      <Link to=\"/login\" className=\"navbar-login\"> Login </Link>\n      <Link to=\"/register\" className=\"navbar-register\"> Register</Link>\n      </>\n)}\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import \"./App.css\";\nimport HomePage from \"./Components/Home/HomePage\";\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport Login from \"./Components/Login/Login\";\nimport Register from \"./Components/Register/Register\";\nimport NavBar from \"./Components/NavBar/NavBar\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <div className=\"App\"> \n        <Routes>\n          <Route path=\"/home\" element={<HomePage />} />\n          <Route path=\"/login\" element={ <Login />} />\n          <Route path=\"/register\" element={<Register />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport authSlice from './authSlice'\r\nimport usersSlice from './usersSlice'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n}\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authSlice,\r\n    users: usersSlice\r\n})\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        }),\r\n})\r\n\r\nlet persistor = persistStore(store)\r\n\r\nexport { persistor, store }\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import store from './Redux/store'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistor, store } from './Redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}